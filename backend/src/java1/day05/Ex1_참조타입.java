package java1.day05;

public class Ex1_참조타입 {
	public static void main(String[] args) {
		
		// p148
		int [] arr1 ; // int형 타입으로 배열변수 선언
		int [] arr2 ;
		int [] arr3 ;
		
	//스택 구역 = 힙 구역
		arr1 = new int [] { 1 , 2 , 3 };  //힙 영역에 메모리를 할당 하고 할당된 주소를 스택영역에 대입
		
		
		// p151 // 객체 주소를 참조하기 있지 않은 상태 = null
		
		int [] intArray = null;
		
		intArray[0] = 10; // 배열은 힙 영역에서 생성되는데 아직 배열이 생성되지 않아 대입할 수 없다
		
		// p153
		
		String hobby = "여행";
			// 1. 스택영역에 hobby 지역변수 선언
			// 2. 힙 영역에 여행 문자열객체 생성
			// 3. 생성된 힙영역에 여행 객체의 주소/번지를 스택영역 지역변수에게 대입
		hobby = null;
			// 4. 스택영역의 hobby 지역변수에 null 대입 [ 새로운 값으로 대체 ]
			// 5. 이러면 여행 이라는 힙 영역에 저장된 번지수가 사라짐//가비지 컬렉터가 자동으로 객체 삭제
		
		String kind1 = "자동차"; // 스택영억 : kind1 [32번지]   힙 영역 : "자동차"객체 [32번지]
		String kind2 = kind1; // 스택영억 : kind1 [32번지]
		
		kind1 = null;  // kind2 에서 32번지 아직 사용중이니 힙 영역이 삭제 되지 않는다
		
	}//main

}


/*

	자바 데이터 타입 - 변수 선언할때 사용하는 자료형
		- 기본타입 : byte short char int long float double boolean
			- 변수에 값 자체를 저장(stack - 쌓는다)
			- 8가지 / 소문자 시작
		- 참조타입 : 배열, 열거 , 클래스 [ String , Scanner , random 등등~ ] , 인터페이스
			- 변수에 값 자체 저장 X // heap 메모리에 생성된 메모리 주소를 참조(가져다 쓴다)
			- 첫글자가 대문자
	jvm 메모리

		스택 영억
		- 스레드마다 stack 을 따로 생성
		- 함수/메소드/(프레임)마다 따라 구역 생성
			- 지역변수
			- 함수(프레임) 종료되면 사라짐

		힙 영역
		- 객체가 생성되는 구역
			- 스택/메소드 영역에 참조 할 수 있다
			- 객체, 배열, 인터페이스 메모리 생성
			- new 연산자 : 타입/클래스 기반으로 새로운 메모리 생성 -> 무조건 힙 메모리를 만든다
		ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
		스택 - int aaa = 1; //리터럴 // 고정된 값 입력한 데이터 그 자체
		
		힙 - 클래스 기반으로 만들어진 객체 (속성/상태, 메소드/행동) 각 각 다 다르다


		스택변수에 저장된 기본타입 값 비교 / 주소 비교
		== , !=
		String 을 사용한다면 얘는 주소값을 가져다가 쓰는거기에 기본값을 가지고있는 변수와 비교가 불가 하다//그래서 이퀄스를 사용 하는거다
		int a =1;
		a == 1 , a != 1 //가능 
		String 가 ="가";
		








*/