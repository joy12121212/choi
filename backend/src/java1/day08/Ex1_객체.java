package java1.day08;

public class Ex1_객체 {

}


/*
		객체지향 프로그램이란 : oop Object-Oriented Programming
			- 부품을 먼저 만들고 그 부품들을 하나씩 조립해서 완성품을 만드는 작업
			- 객체를 먼저 각각 만들고 서로 다른 객체들을 하나씩 조립/합쳐서 하나의 프로그램을 만드는 작업
			- Ex1) 블랙1개=객체1개		=> 블럭 여러개 = 완성품
			
		객체란 -> 물리적으로 존재하거나 개념적으로 존재하는것 중, 식별 가능한 것 // 애매~
			- 물리적 존재 - 자동차, 자전거, 책, 사람 = 손에 잡힌다
			- 개념적 존재 - 학과, 강의, 주문 = 안보임

		- 속성/필드 , 동작/행동
			속성/필드/상태 : 이름 , 나이 , 색상 ~~
			동작/메소드/행동 : 웃다, 먹다, 뛰다, 서다 ~~

		- 객체 모델링 : 현실 세계의 객체를 컴퓨터로 옮기는 과정 [ 필드 / 메소드 만드는 과정 ] 
		
		객체의 상호작용
							<- 상호관계 ->
			사람객체						붕어빵 객체
				이름 : 강호동					함량 : 국산 밀가루 몇g
				행동 : 먹다					구매자 : 강호동
		
			사람객체						붕어빵 객체
				이름 : 유재석					함량 : 중국산 밀가루 몇g
				행동 : 먹다					구매자 : 유재석
				
			- 서로 다른 객체들은 메소드/함수 통해 서로 데이터를 주고 받는다.
			
		객체지향 프로그래밍의 특징
		
			1. 캡슐화		- 필드, 동작 하나로 묶어서 외부객체로의 데이터 노출 차단
			2. 상속		- 상위 객체로부터 필드, 동작을 물려 받아서 하위 객체가 사용할 수 있는 것
			3. 다형성		- 사용방법 같지만 실행 결과는 다양하게 나오는 성질
		


		클래스 = 요리사   객체 = 짜장면, 짬뽕, 탕수육
		
		클래스 = 컵밥		객체 = 제육김치 , 강된장 , 불고기
		
		클래스 = 헤어디자이너	객체 = 파마, 염색, 커트














*/